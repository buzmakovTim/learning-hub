{"version":3,"sources":["CSS/Styles.module.css","Components/Pages/Container.module.css","Components/Header/Header.module.css","Components/Body/Body.module.css","Components/Sidebar/Sidebar.module.css","Components/Footer/Footer.module.css","Components/Header/Header.tsx","Components/Pages/React/ReactNav.jsx","Components/Pages/Git/GitNav.jsx","Components/Pages/JS/JsNav.jsx","Components/Sidebar/Sidebar.tsx","Components/Pages/React/ReactInstall/ReactInstall.tsx","Components/Pages/React/ReactComponent/ReactComponent.tsx","Components/Pages/React/ReactHooks/ReactHooks.tsx","Components/Pages/React/ReactRouterDom/ReactRouterDom.tsx","Components/Pages/React/ReactOther/ReactOther.tsx","Components/Pages/React/ReactContainer.tsx","Components/Pages/Git/About/git_version.png","Components/Pages/Git/About/GitAbout.tsx","Components/Pages/Git/Commands/GitCommands.tsx","Components/Pages/Git/GitContainer.tsx","Components/Pages/JS/About/JsAbout.tsx","Components/Pages/JS/AsyncAwait/AsyncAwait.tsx","Components/Pages/JS/Other/JsOther.tsx","Components/Pages/JS/Promise/JsPromise.tsx","Components/Pages/JS/JsContainer.tsx","Components/Body/Body.tsx","Components/Footer/Footer.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","Header","useState","location","setLocation","useEffect","navigator","geolocation","getCurrentPosition","position","latitude","coords","longitude","fetch","then","res","json","data","city","countryCode","catch","rej","alert","className","classes","mainContainer","nav","navData","isActive","active","to","ReactNav","activeLink","GitNav","JsNav","Sidebar","path","element","ReactInstall","stylingClasses","line","paragraph","href","target","codingPart","spanColorOrange","ReactComponent","ReactHooks","count","setCount","document","title","onClick","ReactRouterDom","ReactOther","id","setId","v1","note","ReactContainer","GitAbout","imageMid","src","git_version","alt","GitCommands","blue","GitContainer","JsAbout","AsyncAwait","width","height","frameborder","allow","allowfullscreen","JsOther","JsPromise","userLeft","setUserLeft","userNotLiking","setUserNotLiking","message","setMessage","allPromiseResolved","setAllPromiseResolved","onePromiseResolved","setOnePromiseResolved","Promise","resolve","reject","name","error","p1","setTimeout","console","log","p2","p3","all","messages","toString","promiseAll","race","promiseRace","JsContainer","Body","sidebar","body","Footer","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.35a6b339.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainContainer\":\"Styles_mainContainer__2sKKt\",\"line\":\"Styles_line__8YaTY\",\"paragraph\":\"Styles_paragraph__HODq0\",\"spanColorOrange\":\"Styles_spanColorOrange__1Qhkt\",\"codingPart\":\"Styles_codingPart__3yYLq\",\"imageMid\":\"Styles_imageMid__1ethG\",\"note\":\"Styles_note__1ANL7\",\"blue\":\"Styles_blue__FIqcQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainContainer\":\"Container_mainContainer__1uifT\",\"activeLink\":\"Container_activeLink__3F7lc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainContainer\":\"Header_mainContainer__2PVjt\",\"nav\":\"Header_nav__2pOz0\",\"active\":\"Header_active__3IGoc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainContainer\":\"Body_mainContainer__2UsIE\",\"sidebar\":\"Body_sidebar__2pvCv\",\"body\":\"Body_body__1COuz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainContainer\":\"Sidebar_mainContainer__1A_4X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainContainer\":\"Footer_mainContainer__3sKx7\"};","import React, { useEffect, useState } from 'react'\r\nimport classes from './Header.module.css'\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nexport const Header = () => {\r\n\r\n    const [location, setLocation] = useState('')\r\n    \r\n\r\n    useEffect (() => {\r\n\r\n            navigator.geolocation.getCurrentPosition(function(position) {\r\n                \r\n                let latitude = position.coords.latitude\r\n                let longitude = position.coords.longitude\r\n \r\n                // API request. Response as Jason. RETURNING PROMISE\r\n                fetch(\"https://api.bigdatacloud.net/data/reverse-geocode-client?latitude=\"+ latitude + \"&longitude=\"+ longitude +\"&localityLanguage=en\")\r\n                .then( res => res.json())\r\n                .then( (data) => {\r\n                    // console.log(data)\r\n                    setLocation(data.city + \" - \" + data.countryCode)\r\n                }).catch((rej) => {\r\n                    alert('Location API failed ' + rej)\r\n                })          \r\n\r\n            });\r\n    });\r\n\r\n\r\n        \r\n    return <div className={classes.mainContainer}>\r\n        \r\n        <p>{location}</p>\r\n\r\n        {/* Navigation */}\r\n        <div className={classes.nav}>\r\n\r\n\r\n            <div>\r\n                <NavLink className={(navData) => navData.isActive ? `${classes.active}` : \"\" } to=\"/\" >\r\n                    Home\r\n                </NavLink>\r\n            </div>\r\n            \r\n            <div>\r\n                <NavLink className={(navData) => navData.isActive ? `${classes.active}` : \"\" } to=\"/react\" >\r\n                    React\r\n                </NavLink>\r\n            </div>\r\n            \r\n            <div>\r\n                <NavLink className={(navData) => navData.isActive ? `${classes.active}` : \"\" } to=\"/js\" >\r\n                    JS\r\n                </NavLink>\r\n            </div>\r\n\r\n            <div>\r\n                <NavLink className={(navData) => navData.isActive ? `${classes.active}` : \"\" } to=\"/git\" >\r\n                    Git\r\n                </NavLink>\r\n            </div>\r\n            \r\n\r\n        </div>\r\n    </div>\r\n}\r\n\r\n","import React from 'react'\r\nimport { NavLink } from 'react-router-dom';\r\nimport classes from './../../Pages/Container.module.css'\r\n\r\nexport const ReactNav = () => {\r\n\r\n    return <div>\r\n\r\n        <h3>React Tutorial</h3>\r\n\r\n        \r\n        \r\n        {/* NavLinks */}\r\n        <div>\r\n            <p >\r\n            <NavLink className={(navData) => navData.isActive ? `${classes.activeLink}` : \"\" } to=\"/react/install\" >\r\n                React Install\r\n            </NavLink>\r\n            </p>\r\n            \r\n            <p>\r\n            <NavLink className={(navData) => navData.isActive ? `${classes.activeLink}` : \"\" } to=\"/react/component\" >\r\n                React Component\r\n            </NavLink>\r\n            </p>\r\n\r\n            <p>\r\n            <NavLink className={(navData) => navData.isActive ? `${classes.activeLink}` : \"\" } to=\"/react/hooks\" >\r\n                React Hooks\r\n            </NavLink>\r\n            </p>\r\n\r\n            <p>\r\n            <NavLink className={(navData) => navData.isActive ? `${classes.activeLink}` : \"\" } to=\"/react/routerDom\" >\r\n                React Router DOM\r\n            </NavLink>\r\n            </p>\r\n\r\n            <p>\r\n            <NavLink className={(navData) => navData.isActive ? `${classes.activeLink}` : \"\" } to=\"/react/other\" >\r\n                React Other\r\n            </NavLink>\r\n            </p>\r\n        \r\n        </div>\r\n        \r\n\r\n    </div>\r\n\r\n}","import React from 'react'\r\nimport { NavLink } from 'react-router-dom';\r\nimport classes from './../../Pages/Container.module.css'\r\n\r\n\r\nexport const GitNav = () => {\r\n\r\n    return <div>\r\n\r\n        <h3>Git Tutorial</h3>\r\n\r\n\r\n        \r\n        {/* NavLinks */}\r\n        <div>\r\n            <p>\r\n            <NavLink className={(navData) => navData.isActive ? `${classes.activeLink}` : \"\" } to=\"/git/about\" >\r\n                Git About\r\n            </NavLink>\r\n            </p>\r\n            \r\n            <p>\r\n            <NavLink className={(navData) => navData.isActive ? `${classes.activeLink}` : \"\" } to=\"/git/commands\" >\r\n                Git Commands\r\n            </NavLink>\r\n            </p>\r\n\r\n        \r\n        </div>\r\n        \r\n\r\n    </div>\r\n\r\n}","import React from 'react'\r\nimport { NavLink } from 'react-router-dom';\r\nimport classes from './../../Pages/Container.module.css'\r\n\r\n\r\nexport const JsNav = () => {\r\n\r\n    return <div>\r\n\r\n        <h3>JavaScript Tutorial</h3>\r\n\r\n\r\n        \r\n        {/* NavLinks */}\r\n        <div>\r\n            <p>\r\n            <NavLink className={(navData) => navData.isActive ? `${classes.activeLink}` : \"\" } to=\"/js/about\" >\r\n                JavaScript About\r\n            </NavLink>\r\n            </p>\r\n            \r\n            \r\n            <p>\r\n            <NavLink className={(navData) => navData.isActive ? `${classes.activeLink}` : \"\" } to=\"/js/promise\" >\r\n                JavaScript Promise\r\n            </NavLink>\r\n            </p>\r\n\r\n            <p>\r\n            <NavLink className={(navData) => navData.isActive ? `${classes.activeLink}` : \"\" } to=\"/js/asyncAwait\" >\r\n                JavaScript Async Await\r\n            </NavLink>\r\n            </p>\r\n\r\n            <p>\r\n            <NavLink className={(navData) => navData.isActive ? `${classes.activeLink}` : \"\" } to=\"/js/other\" >\r\n                JavaScript Other\r\n            </NavLink>\r\n            </p>\r\n        \r\n        </div>\r\n        \r\n\r\n    </div>\r\n\r\n}","import React from 'react'\r\nimport classes from './Sidebar.module.css'\r\nimport { Route, Routes } from 'react-router-dom'\r\nimport {ReactNav} from './../../Components/Pages/React/ReactNav'\r\nimport { GitNav } from '../Pages/Git/GitNav'\r\nimport { JsNav } from '../Pages/JS/JsNav'\r\n\r\n\r\nexport const Sidebar = () => {\r\n\r\n\r\n    return <div className={classes.mainContainer}>\r\n            \r\n            <Routes>\r\n    \r\n                <Route path='/react/*' element={<ReactNav/>}/>\r\n                <Route path='/git/*' element={<GitNav/>}/>\r\n                <Route path='/js/*' element={<JsNav/>}/>\r\n                \r\n            </Routes>\r\n            \r\n\r\n    \r\n    </div>\r\n}","import React from 'react'\r\nimport stylingClasses from './../../../../CSS/Styles.module.css'\r\n\r\n\r\nexport const ReactInstall = () => {\r\n\r\n\r\n    return <div className={stylingClasses.mainContainer}>\r\n            \r\n            <h3>\r\n            About React\r\n            </h3>            \r\n            <div className={stylingClasses.line}></div>\r\n\r\n            <div className={stylingClasses.paragraph}>\r\n                <p><b><a href='https://en.wikipedia.org/wiki/React_(JavaScript_library)' target={'blank'}>React</a></b> is a free and open-source front-end JavaScript library for \r\n                    building user interfaces based on UI components. It is maintained \r\n                    by Meta and a community of individual developers and companies. \r\n                    React can be used as a base in the development of single-page or \r\n                    mobile applications.</p>\r\n\r\n                <br/>\r\n                <p><b>10 Most Popular React Native Apps of 2020:</b></p>\r\n                <span>1. Facebook</span><br/>\r\n                <span>2. Instagram</span><br/>\r\n                <span>3. Skype</span><br/>\r\n                <span>4. Uber Eats</span><br/>\r\n                <span>5. Walmart</span><br/>\r\n                <span>6. Pinterest</span><br/>\r\n                <span>7. Bloomberg</span><br/>\r\n                <span>8. SoundCloud Pulse</span><br/>\r\n                <span>9. Discord</span><br/>\r\n                <span>10. Wix</span><br/>\r\n            </div>\r\n\r\n\r\n            {/* Create new react App */}\r\n            <br/>\r\n            <br/>\r\n            <br/>\r\n            <h3>\r\n            Create a New React App\r\n            </h3>\r\n            <div className={stylingClasses.line}></div>\r\n            <div className={stylingClasses.paragraph}>\r\n                \r\n\r\n                <p>For using <b><a href='https://yarnpkg.com/getting-started' target='blank'>Yarn</a></b></p>\r\n\r\n                <div className={stylingClasses.codingPart}>\r\n                    <span>yarn create-react-app my-app</span> \r\n                    <br/>\r\n                    <span>cd my-app</span>\r\n                    <br/>\r\n                    <span>yarn start</span>\r\n\r\n                    <br/>\r\n                    <br/>\r\n                    <br/>\r\n                    <span className={stylingClasses.spanColorOrange}>For Typescript</span>\r\n                    <br/>\r\n                    <br/>\r\n                    <span>yarn create-react-app my-app --template typescript</span>\r\n                </div>\r\n                \r\n                <br/>\r\n                <p>For using <b>Npx</b></p>\r\n\r\n                <div className={stylingClasses.codingPart}>\r\n                    <span>npx create-react-app my-app</span> \r\n                    <br/>\r\n                    <span>cd my-app</span>\r\n                    <br/>\r\n                    <span>npx start</span>\r\n\r\n                    <br/>\r\n                    <br/>\r\n                    <br/>\r\n                    <span className={stylingClasses.spanColorOrange}>For Typescript</span>\r\n                    <br/>\r\n                    <br/>\r\n                    <span>npx create-react-app my-app --template typescript</span>\r\n                </div>\r\n\r\n\r\n\r\n            <br/>\r\n            <br/>\r\n            <br/>\r\n            </div>\r\n    \r\n    </div>\r\n}","import React from 'react'\r\nimport stylingClasses from './../../../../CSS/Styles.module.css'\r\n\r\n\r\nexport const ReactComponent = () => {\r\n\r\n\r\n    return <div className={stylingClasses.mainContainer}>\r\n            \r\n            <h3>\r\n            React Components\r\n            </h3>            \r\n            <div className={stylingClasses.line}></div>\r\n\r\n            <div className={stylingClasses.paragraph}>\r\n                <p><b><a href='https://reactjs.org/docs/react-component.html' target={'blank'}>React.Component</a></b></p>\r\n\r\n                \r\n                <p>React lets you define components as <b>classes</b> or <b>functions</b>. Components defined as classes currently \r\n                    provide more features which are described in detail on this page. To define a React component class,\r\n                     you need to extend React.Component:</p>\r\n\r\n            \r\n\r\n                {/* Coding Part */}\r\n                <div className={stylingClasses.codingPart}>\r\n                    <span>class <b>Welcome</b> extends <b>React.Component</b> &#123;</span> \r\n                    <br/>\r\n                    <span>&ensp;&ensp; render( ) &#123;</span>\r\n                    <br/>\r\n                    <span>&ensp;&ensp;&ensp;&ensp;return &#60;h1&#62;<b>Hello</b>&#60;&#47;h1&#62;</span>\r\n                    <br/>\r\n                    <span>&ensp;&ensp;&#125;</span>\r\n                    <br/>\r\n                    <span>&#125;</span>\r\n   \r\n                </div>\r\n\r\n                <p>The only method you must define in a React.Component subclass is called <b>render(). </b> \r\n                    All the other methods described on this page are optional.</p>                \r\n                \r\n                <p><b>We strongly recommend against creating your own base component classes.</b> In React components, \r\n                <a href='https://reactjs.org/docs/composition-vs-inheritance.html' target='_blank'> code reuse is primarily achieved through composition rather than inheritance.</a></p>\r\n            \r\n            \r\n                <h3>Function Component</h3>\r\n                {/* Coding Part */}\r\n                <div className={stylingClasses.codingPart}>\r\n                    <span>export const <b>Skill</b> &#61; &#40;props&#58; SkillPropsType&#41; &#61;&#62; &#123;</span> \r\n                    <br/>\r\n                    <span>&ensp;&ensp; return( ) &#123;</span>\r\n                    <br/>\r\n                    <span>&ensp;&ensp;&ensp;&ensp; &#60;h1&#62;<b>Hello</b>&#60;&#47;h1&#62;</span>\r\n                    <br/>\r\n                    <span>&ensp;&ensp;&#125;</span>\r\n                    <br/>\r\n                    <span>&#125;</span>\r\n                </div>\r\n                <p>Or more fancy way</p>\r\n                {/* Coding Part */}\r\n                <div className={stylingClasses.codingPart}>\r\n                    <span>export const <b>Skill &#58; </b>React.FC&#60;SkillPropsType&#62; &#61; &#40; &#123;id, title&#125; &#41; &#61;&#62; &#123;</span> \r\n                    <br/>\r\n                    <span>&ensp;&ensp; return( ) &#123;</span>\r\n                    <br/>\r\n                    <span>&ensp;&ensp;&ensp;&ensp; &#60;h1&#62;<b>Hello</b>&#60;&#47;h1&#62;</span>\r\n                    <br/>\r\n                    <span>&ensp;&ensp;&#125;</span>\r\n                    <br/>\r\n                    <span>&#125;</span>\r\n                </div>\r\n            \r\n            </div>\r\n\r\n\r\n            <br/>\r\n            <div className={stylingClasses.line}></div>\r\n            \r\n                <h3>The Component Lifecycle</h3>\r\n                <span>You can use this <b><a href='https://projects.wojtekmaj.pl/react-lifecycle-methods-diagram/' target='_blank'>lifecycle diagram</a></b> as a cheat sheet</span>\r\n            <br/>\r\n            <br/>\r\n    </div>\r\n}","import React, {useState, useEffect} from 'react'\r\nimport stylingClasses from './../../../../CSS/Styles.module.css'\r\n\r\n//  {    &#123;\r\n//  }    &#125;\r\n//  [    &#91;\r\n//  ]    &#93;\r\n//  '    &#39;\r\n//  <    &#60;\r\n//  >    &#62;\r\n//  ,    &#44;\r\n//  .    &#46;\r\n//  =    &#61;\r\n//  \"    &#34;\r\n//  ;    &#59;\r\n//  :    &#58;\r\n//  /    &#47;\r\n// tab   &ensp; \r\n\r\n\r\n\r\n\r\nexport const ReactHooks = () => {\r\n\r\n    const [count, setCount] = useState(0)\r\n\r\n\r\n    useEffect(() => {\r\n        // Update the document title using the browser API\r\n        document.title = `You clicked ${count} times`;\r\n    });\r\n\r\n    return <div className={stylingClasses.mainContainer}>\r\n            \r\n            <h3>\r\n            React Hooks\r\n            </h3>            \r\n            <div className={stylingClasses.line}></div>\r\n        \r\n        \r\n            <div className={stylingClasses.paragraph}>\r\n\r\n                <p><b><a href='https://reactjs.org/docs/hooks-intro.html' target={'blank'}>Introducing Hooks</a></b></p>\r\n\r\n                <p><b>Hooks</b> are a new addition in React 16.8. They let you use state and other React features without writing a class.</p>\r\n            \r\n            </div>\r\n\r\n\r\n            {/* State Hook */}\r\n                                                <h3>State Hook</h3>\r\n            <p>This example renders a counter. When you click the button, it increments the value:</p>\r\n            \r\n            {/* Paragraph Part */}\r\n            <div className={stylingClasses.paragraph}>\r\n                {/* Coding Part */}\r\n                    <div className={stylingClasses.codingPart}>\r\n                    <span>import <b>React , &#123; useState &#125; </b> from <b> 'react' ; </b></span> \r\n                    <br/>\r\n                    <br/>\r\n                    <span>function <b>Example ( )  &#123; </b></span>\r\n                    <br/>\r\n                    <span><i>&ensp; &ensp;  &#47;&#47; Declare a new state variable, which we'will call \"count\"</i></span>\r\n                    <br/>\r\n                    <span> &ensp; &ensp; const [ <b>count, setState</b> ] = <b>useSatate(0) ;</b>  </span> \r\n                    <br/>\r\n                    <br/>\r\n                    <span> &ensp; &ensp; return (  </span>\r\n                    <br/>\r\n                    <span> &ensp; &ensp; &ensp; &ensp;  &#60; div &#62;  </span>\r\n                    <br/>\r\n                    <span> &ensp; &ensp; &ensp; &ensp; &ensp; &ensp; &#60; p &#62; You clicked &#123; <b>count</b> &#125; times &#60; &#47; p &#62;  </span> \r\n                    <br/>\r\n                    <span> &ensp; &ensp; &ensp; &ensp; &ensp; &ensp; &#60;button <b>onClick</b> = &#123; ( ) &#61;&#62; <b>setCount</b> ( <b>count</b> + 1 ) &#125;&#62;   </span> \r\n                    <br/>\r\n                    <span> &ensp; &ensp; &ensp; &ensp; &ensp; &ensp; &ensp; Click me </span> \r\n                    <br/>\r\n                    <span> &ensp; &ensp; &ensp; &ensp; &ensp; &ensp; &#60;&#47; button &#62;</span> \r\n                    <br/>\r\n                    <span> &ensp; &ensp; &ensp; &ensp; &#60;&#47; div &#62;</span>\r\n                    <br/>\r\n                    <span> &ensp; &ensp;) ; </span>\r\n                    <br/>\r\n                    <span> &#125; </span>  \r\n                </div>\r\n\r\n            <p>And here how this works  <button onClick={ () => setCount(count + 1)}>Click me</button>\r\n            - You clicked {count} times</p>\r\n            \r\n            \r\n            <p>Here, useState is a Hook (we’ll talk about what this means in a moment). We call it inside a function component to add some \r\n                local state to it. React will preserve this state between re-renders. useState returns a pair: the current state value and a \r\n                function that lets you update it. You can call this function from an event handler or somewhere else. It’s similar to \r\n                this.setState in a class, except it doesn’t merge the old and new state together. (We’ll show an example comparing \r\n                useState to this.state in <a href='https://reactjs.org/docs/hooks-state.html' target={'blank'}>Using the State Hook.</a>)</p>\r\n            <p>The only argument to useState is the initial state. In the example above, it is 0 because our counter starts from zero. \r\n                Note that unlike this.state, the state here doesn’t have to be an object — although it can be if you want. The initial \r\n                state argument is only used during the first render.</p>\r\n            \r\n            \r\n            <br/>\r\n            <p><b>But what is a Hook?</b></p>\r\n            \r\n            <p>Hooks are functions that let you “hook into” React state and lifecycle features from function components. Hooks don’t work \r\n                inside classes — they let you use React without classes. (We don’t recommend rewriting your existing components overnight \r\n                but you can start using Hooks in the new ones if you’d like.)</p>\r\n\r\n            </div>\r\n            {/* State Hook End */}\r\n\r\n\r\n            {/* Effect Hook Start */}\r\n                                                                <h3>Effect Hook</h3>\r\n            \r\n            {/* Paragraph Part */}\r\n            <div className={stylingClasses.paragraph}>\r\n\r\n                <p><b>useEffect</b> - it’s a function which takes two parameters: <b>callBack</b> and <b>array of dependencies</b></p>    \r\n\r\n                <p>You’ve likely performed data fetching, subscriptions, or manually changing the DOM from React components before. \r\n                    We call these operations “side effects” (or “effects” for short) because they can affect other components and can’t \r\n                    be done during rendering.</p>\r\n                <p>\r\n                The Effect Hook, <b>useEffect</b>, adds the ability to perform side effects from a function component. It serves the same purpose \r\n                as componentDidMount, componentDidUpdate, and componentWillUnmount in React classes, but unified into a single API. \r\n                (We’ll show examples comparing useEffect to these methods in <a href=\"https://reactjs.org/docs/hooks-effect.html\" target='_blank'><b>Using the Effect Hook.</b></a>)\r\n                </p>\r\n                <p>\r\n                For example, this component sets the document title after React updates the DOM:\r\n                </p>\r\n                {/* Coding Part */}\r\n                <div className={stylingClasses.codingPart}>\r\n                    <span>import <b>React , &#123; useState, useEffect &#125; </b> from <b> 'react' ; </b></span> \r\n                    <br/>\r\n                    <br/>\r\n                    <span>function <b>Example ( )  &#123; </b></span>\r\n                    <br/>\r\n                    <span className={stylingClasses.spanColorOrange}><i>&ensp; &ensp;  &#47;&#47; Declare a new state variable, which we'will call \"count\"</i></span>\r\n                    <br/>\r\n                    <span> &ensp; &ensp; const [ <b>count, setState</b> ] = <b>useSatate(0) ;</b>  </span> \r\n                    <br/>\r\n                    <br/>\r\n                    <span className={stylingClasses.spanColorOrange}><i>&ensp; &ensp; &#47;&#47; Similar to componentDidMount and componentDidUpdate:</i></span>\r\n                    <br/> \r\n                    <b>\r\n                    <span> &ensp; &ensp; useEffect ( ( ) =&#62; &#123;</span> \r\n                    <br/>\r\n                    <span className={stylingClasses.spanColorOrange}><i>&ensp; &ensp; &ensp; &ensp; &#47;&#47; Update the document title using the browser API</i></span>\r\n                    <br/> \r\n                    <span> &ensp; &ensp; &ensp; &ensp; document.title = `You clicked $&#123;count&#125; times`;</span> \r\n                    <br/> \r\n                    <span> &ensp; &ensp;  &#125; ) ; <span className={stylingClasses.spanColorOrange}>IMPORTANT! will run EVERY time when component renders </span></span> \r\n                    </b>\r\n                    <br/>\r\n                    <br/>\r\n                    <br/>\r\n                    <span className={stylingClasses.spanColorOrange}><i>&ensp; &ensp; &#47;&#47; Similar to componentDidMount and componentDidUpdate:</i></span>\r\n                    <br/> \r\n                    <b>\r\n                    <span> &ensp; &ensp; useEffect ( ( ) =&#62; &#123;</span> \r\n                    <br/>\r\n                    <span className={stylingClasses.spanColorOrange}><i>&ensp; &ensp; &ensp; &ensp; &#47;&#47; Update the document title using the browser API</i></span>\r\n                    <br/> \r\n                    <span> &ensp; &ensp; &ensp; &ensp; document.title = `You clicked $&#123;count&#125; times`;</span> \r\n                    <br/> \r\n                    <span> &ensp; &ensp;  &#125;, [] ) ; <span className={stylingClasses.spanColorOrange}>IMPORTANT! will run ONCE only when component renders </span></span> \r\n                    </b>\r\n                    <br/>\r\n                    <br/>\r\n                    <br/>\r\n                    <span className={stylingClasses.spanColorOrange}><i>&ensp; &ensp; &#47;&#47; Similar to componentDidMount and componentDidUpdate:</i></span>\r\n                    <br/> \r\n                    <b>\r\n                    <span> &ensp; &ensp; useEffect ( ( ) =&#62; &#123;</span> \r\n                    <br/>\r\n                    <span className={stylingClasses.spanColorOrange}><i>&ensp; &ensp; &ensp; &ensp; &#47;&#47; Update the document title using the browser API</i></span>\r\n                    <br/> \r\n                    <span> &ensp; &ensp; &ensp; &ensp; document.title = `You clicked $&#123;count&#125; times`;</span> \r\n                    <br/> \r\n                    <span> &ensp; &ensp;  &#125;, [counter]) ; <span className={stylingClasses.spanColorOrange}>IMPORTANT! will run EVERY time COUNTER changed only when component renders </span></span> \r\n                    </b>\r\n                    <br/>\r\n                    <br/>\r\n                    <br/>\r\n                    <span> &ensp; &ensp; return (  </span>\r\n                    <br/>\r\n                    <span> &ensp; &ensp; &ensp; &ensp;  &#60; div &#62;  </span>\r\n                    <br/>\r\n                    <span> &ensp; &ensp; &ensp; &ensp; &ensp; &ensp; &#60; p &#62; You clicked &#123; <b>count</b> &#125; times &#60; &#47; p &#62;  </span> \r\n                    <br/>\r\n                    <span> &ensp; &ensp; &ensp; &ensp; &ensp; &ensp; &#60;button <b>onClick</b> = &#123; ( ) &#61;&#62; <b>setCount</b> ( <b>count</b> + 1 ) &#125;&#62;   </span> \r\n                    <br/>\r\n                    <span> &ensp; &ensp; &ensp; &ensp; &ensp; &ensp; &ensp; Click me </span> \r\n                    <br/>\r\n                    <span> &ensp; &ensp; &ensp; &ensp; &ensp; &ensp; &#60;&#47; button &#62;</span> \r\n                    <br/>\r\n                    <span> &ensp; &ensp; &ensp; &ensp; &#60;&#47; div &#62;</span>\r\n                    <br/>\r\n                    <span> &ensp; &ensp;) ; </span>\r\n                    <br/>\r\n                    <span> &#125; </span>  \r\n                </div>\r\n\r\n            </div>\r\n\r\n            <br/>\r\n            <br/>\r\n            <br/>\r\n    </div>\r\n}","import React from 'react'\r\nimport stylingClasses from './../../../../CSS/Styles.module.css'\r\n\r\n\r\nexport const ReactRouterDom = () => {\r\n\r\n\r\n    return <div className={stylingClasses.mainContainer}>\r\n            \r\n            <h3>\r\n            React Router DOM\r\n            </h3>            \r\n            <div className={stylingClasses.line}></div>\r\n\r\n            <div className={stylingClasses.paragraph}>\r\n                <h3>\r\n                    First what is React Router?\r\n                </h3>\r\n                <p>React Router is a package for routing in React.js, as the documentation said <i>\"React Router is a fully-featured \r\n                    client and server-side routing library for React, a JavaScript library for building user interfaces. \r\n                    React Router runs anywhere React runs; on the web, on the server with node.js, and on React Native.\"</i></p>\r\n\r\n                <p>Used for using NavLink and switching between pages</p> \r\n    \r\n            </div>\r\n            \r\n            <h3><a href=\"https://v5.reactrouter.com/web/guides/quick-start\" target=\"_blank\">How to use Router</a></h3>\r\n            <h3><a href=\"https://v5.reactrouter.com/web/api/NavLink\" target=\"_blank\">How to use NavLink</a></h3>\r\n            <h3><a href=\"https://reactrouter.com/docs/en/v6/upgrading/v5\" target=\"_blank\">Upgrading from v5 And more Info</a></h3>\r\n\r\n            <h3>Installing</h3>\r\n            \r\n                <div className={stylingClasses.paragraph}>\r\n                    <div className={stylingClasses.codingPart}>\r\n                        <span>yarn add react-router-dom</span> \r\n                        <br/>\r\n                        <br/>\r\n                        <br/>\r\n                        <span className={stylingClasses.spanColorOrange}>For Typescript</span>\r\n                        <br/>\r\n                        <br/>\r\n                        <span>yarn add @types/react-router-dom </span>\r\n                    </div>\r\n                </div>\r\n            \r\n\r\n            <br/>\r\n            <br/>\r\n            <br/>\r\n    \r\n    </div>\r\n}","import React, {useEffect, useState} from 'react'\r\nimport stylingClasses from './../../../../CSS/Styles.module.css'\r\nimport {v1} from 'uuid'\r\n\r\n\r\n\r\nexport const ReactOther = () => {\r\n\r\n    const [id, setId] = useState('0')\r\n\r\n    return <div className={stylingClasses.mainContainer}>\r\n            \r\n            <h3>\r\n            React Other\r\n            </h3>            \r\n            <div className={stylingClasses.line}></div>\r\n\r\n            <div className={stylingClasses.paragraph}>\r\n                \r\n                <h3>Here will be some other notes regarding react</h3>\r\n\r\n            </div>\r\n\r\n\r\n            {/* \r\n            UUID\r\n              \r\n            Fot v1()  \r\n            yarn add uuid  ( import {v1} from ‘uuid’)  and \r\n            yarn add @types/uuid   \r\n            */}\r\n\r\n            {/* Create new react App */}\r\n            <br/>\r\n            <br/>\r\n            <br/>\r\n            \r\n            \r\n            \r\n                \r\n            \r\n            <h3>UUID</h3>\r\n            <div className={stylingClasses.line}></div>\r\n\r\n            <div className={stylingClasses.paragraph}>\r\n                \r\n                <p><b><a href=\"https://www.npmjs.com/package/react-uuid\" target=\"_blank\">UUID</a></b> - A UUID (Universal Unique Identifier) is a 128-bit number used to \r\n                uniquely identify some object or entity on the Internet. Depending on the specific mechanisms used, a UUID is either guaranteed to be different or is, \r\n                at least, extremely likely to be different from any other UUID generated until 3400 A.D. </p>\r\n                \r\n                <p><b>Install</b></p>\r\n                {/* CODING */}\r\n                <div className={stylingClasses.codingPart}>\r\n                    <span>yarn add uuid</span> \r\n                    <br/>\r\n                    <br/>\r\n                    <span className={stylingClasses.spanColorOrange}>For Typescript</span>\r\n                    <br/>\r\n                    <br/>\r\n                    <span>yarn add @types/uuid</span> \r\n                    <br/>\r\n                </div>\r\n\r\n                <p><b>Using</b></p>\r\n                {/* CODING */}\r\n                <div className={stylingClasses.codingPart}>\r\n                    <span>import &#123; v1 &#125; from 'uuid'</span> \r\n                    <br/>\r\n                </div>\r\n\r\n                <p>Generating new UUID every time you click on the Button</p>\r\n                <button onClick={() => setId(v1())}>Generate ID</button> <span> - ID is: {id}</span>\r\n\r\n            </div>    \r\n                   \r\n                <br/>\r\n                <br/>\r\n                <br/>\r\n                \r\n\r\n                {/* NOTE */}\r\n                <div className={stylingClasses.note}>\r\n                    <span>Avoiding Type checking in <b>.tsx</b> files</span>\r\n                    <br/>\r\n                    <br/>\r\n                    <span><b>//@ts-ignore</b></span>\r\n                </div>\r\n\r\n            <br/>\r\n            <br/>\r\n            <br/>\r\n            <h3>Add to GitHub Pages</h3>\r\n            <div className={stylingClasses.line}></div>\r\n            <br/>\r\n            {/* CODING */}\r\n            <div className={stylingClasses.paragraph}>\r\n                    <ol>\r\n                        <li>In terminal - <b>yarn add gh-pages –dev</b></li>\r\n                        <li>Add homepage to <b>pakage.json</b> file <br/>\r\n                            <i>&#123; <br/>\r\n                            \"name\" : \"learningHub\",<br/>\r\n                            <b>\"homepage\" : \"https://buzmakovTim.github.io/learningHub\"<br/></b>\r\n                            \"version\" : \"0.1.0\"<br/>\r\n                            &#125;</i>\r\n                        </li>\r\n                        <li>Add under the scripts to <b>pakage.json</b> file <br/>\r\n                            <i>\"predeploy\" : \"npm run build\",<br/>\r\n                            \"deploy\" : \"gh-pages -d build\"<br/></i>\r\n                        </li>\r\n                        <li>And after every commit push we need to run <b>yarn deploy</b></li>\r\n                    </ol>\r\n            </div>\r\n\r\n\r\n\r\n            <br/>\r\n            <br/>\r\n            <br/>\r\n            \r\n    \r\n    </div>\r\n}","import React from 'react'\r\nimport { Route, Routes } from 'react-router-dom'\r\nimport { ReactInstall } from './ReactInstall/ReactInstall'\r\nimport { ReactComponent } from './ReactComponent/ReactComponent'\r\nimport classes from './../Container.module.css'\r\nimport { ReactHooks } from './ReactHooks/ReactHooks'\r\nimport { ReactRouterDom } from './ReactRouterDom/ReactRouterDom'\r\nimport { ReactOther } from './ReactOther/ReactOther'\r\n\r\nexport const ReactContainer = () => {\r\n\r\n    return <div className={classes.mainContainer}>\r\n\r\n        <h1>\r\n        React\r\n        </h1>\r\n        \r\n\r\n        <Routes>\r\n                <Route path='/install' element={<ReactInstall/>}/>\r\n                <Route path='/component' element={<ReactComponent/>}/>\r\n                <Route path='/hooks' element={<ReactHooks/>}/> \r\n                <Route path='/routerDom' element={<ReactRouterDom/>}/>      \r\n                <Route path='/other' element={<ReactOther/>}/>               \r\n        </Routes>\r\n\r\n\r\n    </div>\r\n\r\n}","export default __webpack_public_path__ + \"static/media/git_version.45067833.png\";","import React, {useState, useEffect} from 'react'\r\nimport stylingClasses from './../../../../CSS/Styles.module.css'\r\nimport  git_version  from './git_version.png'\r\n\r\n//  {    &#123;\r\n//  }    &#125;\r\n//  [    &#91;\r\n//  ]    &#93;\r\n//  '    &#39;\r\n//  <    &#60;\r\n//  >    &#62;\r\n//  ,    &#44;\r\n//  .    &#46;\r\n//  =    &#61;\r\n//  \"    &#34;\r\n//  ;    &#59;\r\n//  :    &#58;\r\n//  /    &#47;\r\n// tab   &ensp; \r\n\r\n\r\n\r\n\r\nexport const GitAbout = () => {\r\n\r\n\r\n    return <div className={stylingClasses.mainContainer}>\r\n            \r\n            <h3>\r\n            About\r\n            </h3>            \r\n            <div className={stylingClasses.line}></div>\r\n        \r\n        \r\n            <div className={stylingClasses.paragraph}>\r\n\r\n                <p><b><a href='https://git-scm.com/' target={'blank'}>Git</a></b> is a free \r\n                and open source distributed version control system designed to handle everything from small to very large \r\n                projects with speed and efficiency.</p>\r\n\r\n                <p>Git is easy to learn and has a tiny footprint with lightning fast performance. It outclasses SCM tools \r\n                    like Subversion, CVS, Perforce, and ClearCase with features like cheap local branching, convenient \r\n                    staging areas, and multiple workflows.</p>\r\n\r\n                \r\n                {/* Image container */}\r\n                <div className={stylingClasses.imageMid}>\r\n                    <img src={git_version} alt=\"\" />\r\n                </div>\r\n                \r\n                \r\n            </div>\r\n            \r\n            \r\n                                <p><b>Git needs to be installed on your PC/MAC.</b></p>\r\n                <p><b><a href='https://git-scm.com/downloads' target='_blank'>DOWNLOAD</a></b></p>\r\n           \r\n            <br/>\r\n            <br/>\r\n            <br/>\r\n    </div>\r\n}","import React, {useState, useEffect} from 'react'\r\nimport stylingClasses from './../../../../CSS/Styles.module.css'\r\n\r\n//  {    &#123;\r\n//  }    &#125;\r\n//  [    &#91;\r\n//  ]    &#93;\r\n//  '    &#39;\r\n//  <    &#60;\r\n//  >    &#62;\r\n//  ,    &#44;\r\n//  .    &#46;\r\n//  =    &#61;\r\n//  \"    &#34;\r\n//  ;    &#59;\r\n//  :    &#58;\r\n//  /    &#47;\r\n// tab   &ensp; \r\n\r\n\r\n\r\n\r\nexport const GitCommands = () => {\r\n\r\n\r\n    return <div className={stylingClasses.mainContainer}>\r\n            \r\n            <h3>\r\n            Git Commands\r\n            </h3>            \r\n            <div className={stylingClasses.line}></div>\r\n        \r\n        \r\n            <div className={stylingClasses.paragraph}>\r\n\r\n                <p><b><a href='https://git-scm.com/docs' target={'blank'}>Reference to official documentation</a></b></p>\r\n\r\n            </div>\r\n\r\n\r\n                                                <h3>Basic Commands</h3>\r\n            \r\n            {/* Paragraph Part */}\r\n            <div className={stylingClasses.paragraph}>  \r\n                <table>\r\n                    <tbody>\r\n                        <tr className={stylingClasses.blue}><td><b>Action</b></td> <td><b>Command</b></td></tr>\r\n                        \r\n                        <tr><td>Initialize the Directory</td> <td>git init</td></tr>\r\n                        <tr><td>Clone repository</td> <td>git clone https://github.com/libgit2/libgit2</td></tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n            {/* Paragraph Part */}\r\n\r\n\r\n                                                <h3>Creating New Branch</h3>\r\n            \r\n            {/* Paragraph Part */}\r\n            <div className={stylingClasses.paragraph}>  \r\n                <table>\r\n                    <tbody>\r\n                        <tr className={stylingClasses.blue}><td><b>Action</b></td> <td><b>Command</b></td></tr>\r\n                        \r\n                        <tr><td>Creating New branch</td> <td>git branch newBranchName</td></tr>\r\n                        <tr><td>Creating New branch and open it</td> <td>git checkout -b newBranchName</td></tr>\r\n                        <tr><td>List all of the branches in your repository</td> <td>git branch <b>or</b> git branch --list</td></tr>\r\n                        <tr><td>Switching branches</td> <td>git checkout differentBranchName</td></tr>\r\n                        <tr><td>Deleting branch (safe mode)</td> <td>git branch -d branchToDelete</td></tr>\r\n                        <tr><td>Deleting branch FORCE</td> <td>git branch -D branchToDelete</td></tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n            {/* Paragraph Part */}\r\n\r\n\r\n                                                    <h3>Committing and Pushing</h3>\r\n            \r\n            {/* Paragraph Part */}\r\n            <div className={stylingClasses.paragraph}>  \r\n                <table>\r\n                    <tbody>\r\n                        <tr className={stylingClasses.blue}><td><b>Action</b></td> <td><b>Command</b></td></tr>\r\n                        \r\n                        <tr><td>Add all files for commit</td> <td>git add .</td></tr>\r\n                        <tr><td>Add particular file</td> <td>git add fileName</td></tr>\r\n                        <tr><td>Add particular directory</td> <td>git add directoryName</td></tr>\r\n                        <tr><td>Commit</td> <td>git commit -m \"Comment for this commit\"</td></tr>\r\n                        <tr><td>Push</td> <td>git push</td></tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n            {/* Paragraph Part */}\r\n\r\n            <br/>\r\n            <br/>\r\n            <br/>\r\n    </div>\r\n}","import React from 'react'\r\nimport { Route, Routes } from 'react-router-dom'\r\nimport classes from './../Container.module.css'\r\nimport { GitAbout } from './About/GitAbout'\r\nimport { GitCommands } from './Commands/GitCommands'\r\n\r\nexport const GitContainer = () => {\r\n\r\n    return <div className={classes.mainContainer}>\r\n\r\n        <h1>\r\n        Git\r\n        </h1>\r\n        \r\n\r\n        <Routes>\r\n                <Route path='/about' element={<GitAbout/>}/>\r\n                <Route path='/commands' element={<GitCommands/>}/>            \r\n        </Routes>\r\n\r\n\r\n    </div>\r\n\r\n}","import React, {useEffect, useState} from 'react'\r\nimport stylingClasses from './../../../../CSS/Styles.module.css'\r\nimport {v1} from 'uuid'\r\n\r\n//  {    &#123;\r\n//  }    &#125;\r\n//  [    &#91;\r\n//  ]    &#93;\r\n//  '    &#39;\r\n//  <    &#60;\r\n//  >    &#62;\r\n//  ,    &#44;\r\n//  .    &#46;\r\n//  =    &#61;\r\n//  \"    &#34;\r\n//  ;    &#59;\r\n//  :    &#58;\r\n//  /    &#47;\r\n// tab   &ensp; \r\n\r\n\r\nexport const JsAbout = () => {\r\n\r\n    const [id, setId] = useState('0')\r\n\r\n    return <div className={stylingClasses.mainContainer}>\r\n            \r\n            <h3>\r\n                JavaScript About\r\n            </h3>            \r\n            <div className={stylingClasses.line}></div>\r\n\r\n            <div className={stylingClasses.paragraph}>\r\n                \r\n                <p><b><a href=\"https://en.wikipedia.org/wiki/JavaScript\" target=\"_blank\">JavaScript</a></b>, often abbreviated <b>JS</b>, is a programming language that is one of the core \r\n                technologies of the World Wide Web, alongside HTML and CSS. Over 97% of websites use JavaScript on the client \r\n                side for web page behavior, often incorporating third-party libraries. All major web browsers have a dedicated \r\n                JavaScript engine to execute the code on the user's device</p>\r\n\r\n            </div>\r\n\r\n\r\n            {/* \r\n            UUID\r\n              \r\n            Fot v1()  \r\n            yarn add uuid  ( import {v1} from ‘uuid’)  and \r\n            yarn add @types/uuid   \r\n            */}\r\n\r\n            {/* Create new react App */}\r\n            <br/>\r\n            <br/>\r\n            <br/>\r\n            \r\n            \r\n            \r\n                \r\n            \r\n            <h3>JavaScript data types and data structures</h3>\r\n            <div className={stylingClasses.line}></div>\r\n\r\n            <div className={stylingClasses.paragraph}>\r\n                \r\n            <h4>Dynamic Type</h4>\r\n            <p>JavaScript is a <i>loosely typed</i> and <i>dynamic</i> language. Variables in JavaScript are not directly associated \r\n                with any particular value type, and any variable can be assigned (and re-assigned) values of all types:</p>\r\n\r\n            </div>    \r\n                   \r\n                {/* NOTE */}\r\n                <div className={stylingClasses.note}>\r\n                    <span><b>let foo = 42 ;</b>   <i>// foo is now a number</i></span><br/>\r\n                    <span><b>&ensp; &ensp;foo = 'bar' ;</b>   <i>// foo is now a string</i></span><br/>\r\n                    <span><b>&ensp; &ensp;foo = true ;</b>   <i>// foo is now a boolean</i></span><br/>\r\n                    \r\n                </div>\r\n            \r\n\r\n            <div className={stylingClasses.paragraph}>\r\n                \r\n            <h4>JavaScript types</h4>\r\n\r\n                <ul>\r\n                    <li>\r\n                            <span><b><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#primitive_values\" target=\"_blank\">Primitive values</a></b></span>\r\n                        <ol>\r\n                            <li><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#boolean_type\" target=\"_blank\">Boolean</a></li>\r\n                            <li><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#null_type\" target=\"_blank\">Null</a></li>\r\n                            <li><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#undefined_type\" target=\"_blank\">Undefined</a></li>\r\n                            <li><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#number_type\" target=\"_blank\">Number</a></li>\r\n                            <li><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#bigint_type\" target=\"_blank\">BigInt</a></li>\r\n                            <li><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#string_type\" target=\"_blank\">String</a></li>\r\n                            <li><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#symbol_type\" target=\"_blank\">Symbol</a></li>\r\n                        </ol>\r\n                    </li>\r\n                    <li>\r\n                            <span><b><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#objects\" target=\"_blank\">Objects</a></b></span>\r\n                    </li>\r\n\r\n\r\n                </ul>\r\n                \r\n                \r\n            </div>\r\n\r\n\r\n            <br/>\r\n            <br/>\r\n            <br/>\r\n            \r\n    \r\n    </div>\r\n}","import React, {useEffect, useState} from 'react'\r\nimport stylingClasses from './../../../../CSS/Styles.module.css'\r\nimport {v1} from 'uuid'\r\n\r\n//  {    &#123;\r\n//  }    &#125;\r\n//  [    &#91;\r\n//  ]    &#93;\r\n//  '    &#39;\r\n//  <    &#60;\r\n//  >    &#62;\r\n//  ,    &#44;\r\n//  .    &#46;\r\n//  =    &#61;\r\n//  \"    &#34;\r\n//  ;    &#59;\r\n//  :    &#58;\r\n//  /    &#47;\r\n// tab   &ensp; \r\n\r\n\r\nexport const AsyncAwait = () => {\r\n\r\n    const[userLeft, setUserLeft] = useState(false)\r\n    const[userNotLiking, setUserNotLiking] = useState(false)\r\n    const[message, setMessage] = useState('message will be here after pressing the button')\r\n    const[allPromiseResolved, setAllPromiseResolved] = useState('---')\r\n    const[onePromiseResolved, setOnePromiseResolved] = useState('---')\r\n    \r\n    // Function USING promise\r\nfunction watchInstaReelsPromise() {\r\n        return new Promise ((resolve, reject) => {\r\n            if (userLeft) {\r\n                reject({\r\n                    name : 'User left' ,\r\n                    message : ':('\r\n                })\r\n        } else if (userNotLiking) {\r\n                reject({\r\n                    name : 'User not commenting and liking' ,\r\n                    message : 'Very bad :('\r\n        })\r\n        } else {\r\n                resolve ( 'Like and Subscribe! :)' )\r\n        }\r\n    })\r\n}\r\n\r\n\r\n// For Promise.all() and Promise.race() functions\r\n\r\nfunction promiseAll() {\r\n    \r\n    setAllPromiseResolved(' Processing...  please wait ')\r\n    \r\n    const p1 = new Promise((resolve, reject) => {\r\n        //@ts-ignore\r\n        setTimeout(() => {\r\n            console.log('Promise 1')\r\n            // setAllPromiseResolved(' Promise 1 resolved! ')\r\n            resolve(' Promise 1 resolved! ')}, 3000)\r\n    })\r\n    const p2 = new Promise((resolve, reject) => {\r\n        //@ts-ignore\r\n        setTimeout(() => {\r\n            console.log('Promise 2')\r\n            // setAllPromiseResolved(' Promise 2 resolved! ')\r\n            resolve(' Promise 2 resolved! ')}, 5000)\r\n    })\r\n    const p3 = new Promise((resolve, reject) => {\r\n        //@ts-ignore\r\n        setTimeout(() => {\r\n            console.log('Promise 3')\r\n            // setAllPromiseResolved(' Promise 3 resolved! ')\r\n            resolve(' Promise 3 resolved! ')}, 1000)\r\n    })\r\n\r\n    // Promise.all function!!! \r\n    Promise.all([p1, p2, p3]).then(messages => {\r\n        setAllPromiseResolved(messages.toString())\r\n    })\r\n}\r\n\r\nfunction promiseRace() {\r\n    const p1 = new Promise((resolve, reject) => {\r\n        //@ts-ignore\r\n        setTimeout(() => {\r\n            console.log('Promise 1')\r\n            resolve(' Promise 1 resolved! ')}, 3000)\r\n    })\r\n    const p2 = new Promise((resolve, reject) => {\r\n        //@ts-ignore\r\n        setTimeout(() => {\r\n            console.log('Promise 2')\r\n            resolve(' Promise 2 resolved! ')}, 5000)\r\n    })\r\n    const p3 = new Promise((resolve, reject) => {\r\n        //@ts-ignore\r\n        setTimeout(() => {\r\n            console.log('Promise 3')\r\n            resolve(' Promise 3 resolved! ')}, 1000)\r\n    })\r\n\r\n    // Promise.race function!!! \r\n    Promise.race([p1, p2, p3]).then(message => {\r\n        //@ts-ignore\r\n        setOnePromiseResolved(\"First Promise that resolved\" + message)\r\n    })\r\n}\r\n\r\n\r\n\r\n\r\n\r\n    return <div className={stylingClasses.mainContainer}>\r\n            \r\n            <h3>\r\n            JavaScript Async Await\r\n            </h3>            \r\n            <div className={stylingClasses.line}></div>\r\n\r\n            <br/>\r\n            {/* YouTube Video Embed */}\r\n            {/* @ts-ignore */}\r\n            <iframe \r\n                width=\"560\" \r\n                height=\"315\" \r\n                src=\"https://www.youtube.com/embed/V_Kr9OSfDeU\" \r\n                title=\"YouTube video player\" \r\n                /* @ts-ignore */\r\n                frameborder=\"0\" \r\n                allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" \r\n                allowfullscreen>\r\n            </iframe>\r\n\r\n            <br/>\r\n            <br/>\r\n            {/* NOTE */}\r\n            <div className={stylingClasses.note}>\r\n                    <span><b>NOTE</b></span>\r\n                    <br/>\r\n                    <br/>\r\n                    <span><i>\"async and await make promises easier to write\"</i></span>\r\n                    <br/><br/>\r\n                    <span><b>async</b> makes a function return a Promise</span>\r\n                    <br/><br/>\r\n                    <span><b>await</b> makes a function wait for a Promise</span>\r\n                </div>\r\n\r\n\r\n            {/* PARAGRAPH START */}\r\n            <div className={stylingClasses.paragraph}>\r\n            \r\n            <h3>Async Syntax</h3>\r\n            \r\n                <p>The keyword <b>async</b> before a function makes the function return a promise:</p>\r\n                \r\n                {/* CODING START*/}\r\n                <div className={stylingClasses.codingPart}>\r\n                    \r\n                    <span><b>EXAMPLE</b></span>\r\n                    <br/>\r\n                    <br/>\r\n                    <span><b>async</b> function <b>myFunction</b>( ) &#123; </span> \r\n                    <br/>\r\n                    <span>&ensp;&ensp;return \"Hello\" ;</span> \r\n                    <br/>\r\n                    <span>&#125;</span> \r\n                    <br/>\r\n                    <br/>\r\n                    <span>Is the same as:</span>\r\n                    <br/>\r\n                    <br/>\r\n                    <span>function <b>myFunction</b>( ) &#123; </span> \r\n                    <br/>\r\n                    <span>&ensp;&ensp;return Promise.resolve(\"Hello\") ;</span> \r\n                    <br/>\r\n                    <span>&#125;</span> \r\n                    <br/>\r\n\r\n\r\n                </div>{/* CODING END */}\r\n\r\n            </div>{/* PARAGRAPH START */}    \r\n\r\n\r\n            <br/>\r\n            <br/>\r\n            <br/>\r\n            \r\n            {/* \r\n            \r\n                function makeRequest(location){\r\n                    return new Promise((resolve, reject) => {\r\n\r\n                        console.log(`Making request to ${location}`)\r\n\r\n                        if(location === \"Google\"){\r\n                            resolve('Google Says Hi')\r\n                        } else {\r\n                            reject('We can only talk to Google')\r\n                        }\r\n                    })\r\n                }\r\n\r\n                function processRequest(response){\r\n                    return new Promise((resolve, reject) => {\r\n\r\n                        console.log('Processing response')\r\n                        resolve(`Extra information + ${response}`)\r\n                    })\r\n                }\r\n\r\n                // Using .then nesting \r\n\r\n                makeRequest(\"Google\").then(response =>{\r\n\r\n                    console.log('Response received')\r\n                    return processRequest(response)\r\n                }).then(processedResponse => {\r\n                    console.log(processedResponse)\r\n                }).catch(err => {\r\n                    console.log(err)\r\n                })\r\n\r\n                // And now we gonna use Async Await for this functions (same result as above)\r\n\r\n                async function doAllWork(){\r\n                    try {\r\n                        const response = await makeRequest('Google')\r\n                        console.log('Response received')\r\n                        const processedResponse = await processRequest(response)\r\n                        console.log(processedResponse)\r\n                    }\r\n                    catch (err) {\r\n                        console.log(err)\r\n                    }\r\n                    \r\n                }\r\n\r\n                doAllWork()\r\n\r\n            */}\r\n    \r\n    </div>\r\n}","import React, {useEffect, useState} from 'react'\r\nimport stylingClasses from './../../../../CSS/Styles.module.css'\r\nimport {v1} from 'uuid'\r\n\r\n\r\n\r\nexport const JsOther = () => {\r\n\r\n    const [id, setId] = useState('0')\r\n\r\n    return <div className={stylingClasses.mainContainer}>\r\n            \r\n            <h3>\r\n            JavaScript Other\r\n            </h3>            \r\n            <div className={stylingClasses.line}></div>\r\n\r\n            <div className={stylingClasses.paragraph}>\r\n                \r\n                <h3>Here will be some other notes regarding react</h3>\r\n\r\n            </div>\r\n\r\n\r\n            {/* \r\n            UUID\r\n              \r\n            Fot v1()  \r\n            yarn add uuid  ( import {v1} from ‘uuid’)  and \r\n            yarn add @types/uuid   \r\n            */}\r\n\r\n            {/* Create new react App */}\r\n            <br/>\r\n            <br/>\r\n            <br/>\r\n            \r\n            \r\n            \r\n                \r\n            \r\n            <h3>UUID</h3>\r\n            <div className={stylingClasses.line}></div>\r\n\r\n            <div className={stylingClasses.paragraph}>\r\n                \r\n                <p><b><a href=\"https://www.npmjs.com/package/react-uuid\" target=\"_blank\">UUID</a></b> - A UUID (Universal Unique Identifier) is a 128-bit number used to \r\n                uniquely identify some object or entity on the Internet. Depending on the specific mechanisms used, a UUID is either guaranteed to be different or is, \r\n                at least, extremely likely to be different from any other UUID generated until 3400 A.D. </p>\r\n                \r\n                <p><b>Install</b></p>\r\n                {/* CODING */}\r\n                <div className={stylingClasses.codingPart}>\r\n                    <span>yarn add uuid</span> \r\n                    <br/>\r\n                    <br/>\r\n                    <span className={stylingClasses.spanColorOrange}>For Typescript</span>\r\n                    <br/>\r\n                    <br/>\r\n                    <span>yarn add @types/uuid</span> \r\n                    <br/>\r\n                </div>\r\n\r\n                <p><b>Using</b></p>\r\n                {/* CODING */}\r\n                <div className={stylingClasses.codingPart}>\r\n                    <span>import &#123; v1 &#125; from 'uuid'</span> \r\n                    <br/>\r\n                </div>\r\n\r\n                <p>Generating new UUID every time you click on the Button</p>\r\n                <button onClick={() => setId(v1())}>Generate ID</button> <span> - ID is: {id}</span>\r\n\r\n            </div>    \r\n                   \r\n                <br/>\r\n                <br/>\r\n                <br/>\r\n                \r\n\r\n                {/* NOTE */}\r\n                <div className={stylingClasses.note}>\r\n                    <span>Avoiding Type checking in <b>.tsx</b> files</span>\r\n                    <br/>\r\n                    <br/>\r\n                    <span><b>//@ts-ignore</b></span>\r\n                </div>\r\n\r\n            <br/>\r\n            <br/>\r\n            <br/>\r\n            <h3>Add to GitHub Pages</h3>\r\n            <div className={stylingClasses.line}></div>\r\n            <br/>\r\n            {/* CODING */}\r\n            <div className={stylingClasses.paragraph}>\r\n                    <ol>\r\n                        <li>In terminal - <b>yarn add gh-pages –dev</b></li>\r\n                        <li>Add homepage to <b>pakage.json</b> file <br/>\r\n                            <i>&#123; <br/>\r\n                            \"name\" : \"learningHub\",<br/>\r\n                            <b>\"homepage\" : \"https://buzmakovTim.github.io/learningHub\"<br/></b>\r\n                            \"version\" : \"0.1.0\"<br/>\r\n                            &#125;</i>\r\n                        </li>\r\n                        <li>Add under the scripts to <b>pakage.json</b> file <br/>\r\n                            <i>\"predeploy\" : \"npm run build\",<br/>\r\n                            \"deploy\" : \"gh-pages -d build\"<br/></i>\r\n                        </li>\r\n                        <li>And after every commit push we need to run <b>yarn deploy</b></li>\r\n                    </ol>\r\n            </div>\r\n\r\n\r\n\r\n            <br/>\r\n            <br/>\r\n            <br/>\r\n            \r\n    \r\n    </div>\r\n}","import React, {useEffect, useState} from 'react'\r\nimport stylingClasses from './../../../../CSS/Styles.module.css'\r\nimport {v1} from 'uuid'\r\n\r\n//  {    &#123;\r\n//  }    &#125;\r\n//  [    &#91;\r\n//  ]    &#93;\r\n//  '    &#39;\r\n//  <    &#60;\r\n//  >    &#62;\r\n//  ,    &#44;\r\n//  .    &#46;\r\n//  =    &#61;\r\n//  \"    &#34;\r\n//  ;    &#59;\r\n//  :    &#58;\r\n//  /    &#47;\r\n// tab   &ensp; \r\n\r\n\r\nexport const JsPromise = () => {\r\n\r\n    const[userLeft, setUserLeft] = useState(false)\r\n    const[userNotLiking, setUserNotLiking] = useState(false)\r\n    const[message, setMessage] = useState('message will be here after pressing the button')\r\n    const[allPromiseResolved, setAllPromiseResolved] = useState('---')\r\n    const[onePromiseResolved, setOnePromiseResolved] = useState('---')\r\n    \r\n    // Function USING promise\r\nfunction watchInstaReelsPromise() {\r\n        return new Promise ((resolve, reject) => {\r\n            if (userLeft) {\r\n                reject({\r\n                    name : 'User left' ,\r\n                    message : ':('\r\n                })\r\n        } else if (userNotLiking) {\r\n                reject({\r\n                    name : 'User not commenting and liking' ,\r\n                    message : 'Very bad :('\r\n        })\r\n        } else {\r\n                resolve ( 'Like and Subscribe! :)' )\r\n        }\r\n    })\r\n}\r\n\r\n\r\n// For Promise.all() and Promise.race() functions\r\n\r\nfunction promiseAll() {\r\n    \r\n    setAllPromiseResolved(' Processing...  please wait ')\r\n    \r\n    const p1 = new Promise((resolve, reject) => {\r\n        //@ts-ignore\r\n        setTimeout(() => {\r\n            console.log('Promise 1')\r\n            // setAllPromiseResolved(' Promise 1 resolved! ')\r\n            resolve(' Promise 1 resolved! ')}, 3000)\r\n    })\r\n    const p2 = new Promise((resolve, reject) => {\r\n        //@ts-ignore\r\n        setTimeout(() => {\r\n            console.log('Promise 2')\r\n            // setAllPromiseResolved(' Promise 2 resolved! ')\r\n            resolve(' Promise 2 resolved! ')}, 5000)\r\n    })\r\n    const p3 = new Promise((resolve, reject) => {\r\n        //@ts-ignore\r\n        setTimeout(() => {\r\n            console.log('Promise 3')\r\n            // setAllPromiseResolved(' Promise 3 resolved! ')\r\n            resolve(' Promise 3 resolved! ')}, 1000)\r\n    })\r\n\r\n    // Promise.all function!!! \r\n    Promise.all([p1, p2, p3]).then(messages => {\r\n        setAllPromiseResolved(messages.toString())\r\n    })\r\n}\r\n\r\nfunction promiseRace() {\r\n    const p1 = new Promise((resolve, reject) => {\r\n        //@ts-ignore\r\n        setTimeout(() => {\r\n            console.log('Promise 1')\r\n            resolve(' Promise 1 resolved! ')}, 3000)\r\n    })\r\n    const p2 = new Promise((resolve, reject) => {\r\n        //@ts-ignore\r\n        setTimeout(() => {\r\n            console.log('Promise 2')\r\n            resolve(' Promise 2 resolved! ')}, 5000)\r\n    })\r\n    const p3 = new Promise((resolve, reject) => {\r\n        //@ts-ignore\r\n        setTimeout(() => {\r\n            console.log('Promise 3')\r\n            resolve(' Promise 3 resolved! ')}, 1000)\r\n    })\r\n\r\n    // Promise.race function!!! \r\n    Promise.race([p1, p2, p3]).then(message => {\r\n        //@ts-ignore\r\n        setOnePromiseResolved(\"First Promise that resolved\" + message)\r\n    })\r\n}\r\n\r\n\r\n\r\n\r\n\r\n    return <div className={stylingClasses.mainContainer}>\r\n            \r\n            <h3>\r\n            JavaScript Promise\r\n            </h3>            \r\n            <div className={stylingClasses.line}></div>\r\n\r\n            <br/>\r\n            {/* @ts-ignore */}\r\n            <iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/DHvZLI7Db8E\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\r\n\r\n\r\n            <div className={stylingClasses.paragraph}>\r\n                \r\n                <h3>Description</h3>\r\n\r\n                <p>The <b><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise\" target=\"_blank\">Promise </a></b> \r\n                 object represents the eventual completion (or failure) of an asynchronous operation and its resulting value.</p>\r\n\r\n                <p>A <b>Promise</b> is \r\n                a proxy for a value not necessarily known when the promise is created. \r\n                It allows you to associate handlers with an asynchronous action's eventual success value or failure reason. \r\n                This lets asynchronous methods return values like synchronous methods: instead of immediately returning \r\n                the final value, the asynchronous method returns a promise to supply the value at some point in the \r\n                future.</p>\r\n\r\n                <p><b>A Promise in in one of these state:</b></p>\r\n                <ul>\r\n                    <li><i><b>pending :</b></i> initial state, neither fulfilled nor rejected.</li>\r\n                    <li><i><b>fulfilled :</b></i> meaning that the operation was completed successfully.</li>\r\n                    <li><i><b>rejected :</b></i> meaning that the operation failed.</li>\r\n                </ul>\r\n\r\n\r\n                {/* CODING */}\r\n                <br/>\r\n                <br/>\r\n                <p><b>Let's create PROMISE</b></p>\r\n                <div className={stylingClasses.codingPart}>\r\n                    <span>let p = new <b>Promise</b>( ( <b>resolve, reject</b> ) =&#62; &#123; </span> \r\n                    <br/>\r\n                    <span>&ensp;&ensp;let a = 1 + 1</span> \r\n                    <br/>\r\n                    <span>&ensp;&ensp;if ( a == 2 ) &#123;</span> \r\n                    <br/>\r\n                    <span>&ensp;&ensp;&ensp;&ensp;<b>resolve( \"Success\" )</b></span> \r\n                    <br/>\r\n                    <span>&ensp;&ensp;&#125; else &#123; </span> \r\n                    <br/>\r\n                    <span>&ensp;&ensp;&ensp;&ensp;<b>reject( \"Failed\" )</b></span> \r\n                    <br/>\r\n                    <span>&ensp;&ensp;&#125;</span> \r\n                    <br/>\r\n                    <span>&#125; )</span> \r\n                    <br/>\r\n                    <br/>\r\n                    \r\n                    <span className={stylingClasses.spanColorOrange}><i>// This promise ALWAYS gonna be resolved as 1 + 1 always 2</i></span>\r\n                    <br/>\r\n                    <br/>\r\n                    <br/>\r\n\r\n                    <span>p.<b>then</b>( ( message ) =&#62; &#123; </span> \r\n                    <br/>\r\n                    <span>&ensp;&ensp;console.log( \"This is in then\" + message )</span> \r\n                    <br/>\r\n                    <span>p.<b>catch</b>( ( message ) =&#62; &#123; </span> \r\n                    <br/>\r\n                    <span>&ensp;&ensp;console.log( \"This is in catch\" + message )</span> \r\n                    <br/>\r\n\r\n                </div>\r\n            \r\n\r\n\r\n             {/* CODING */}\r\n             <br/>\r\n                <br/>\r\n                <p><b>Converting CallBack function to Promise</b></p>\r\n                <div className={stylingClasses.codingPart}>\r\n                    <span>let <b>userLeft</b> = false</span>\r\n                    <br/>\r\n                    <span>let <b>userNotLiking</b> = false</span>\r\n                    <br/>\r\n                    <br/>\r\n                    <span>function <b>watchInstaReels</b>( ( <b>callBack, errorCallBack</b> ) =&#62; &#123; </span> \r\n                    <br/>\r\n                    <span>&ensp;&ensp;if ( userLeft ) &#123;</span> \r\n                    <br/>\r\n                    <span>&ensp;&ensp;&ensp;&ensp;<b>errorCallBack ( &#123;</b></span> \r\n                    <br/>\r\n                    <span>&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;<b>name</b> : 'User left' ,</span> \r\n                    <br/>\r\n                    <span>&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;<b>message</b> : ':('</span> \r\n                    <br/>\r\n                    <span>&ensp;&ensp;&ensp;&ensp;<b>&#125; )</b></span> \r\n                    <br/>\r\n                    <span>&ensp;&ensp;&#125; else if ( userNotLiking ) &#123; </span> \r\n                    <br/>\r\n                    <span>&ensp;&ensp;&ensp;&ensp;<b>errorCallBack ( &#123;</b></span> \r\n                    <br/>\r\n                    <span>&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;<b>name</b> : 'User not commenting and liking' ,</span> \r\n                    <br/>\r\n                    <span>&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;<b>message</b> : 'Very bad :('</span> \r\n                    <br/>\r\n                    <span>&ensp;&ensp;&ensp;&ensp;<b>&#125; )</b></span> \r\n                    <br/>\r\n                    <span>&ensp;&ensp;&#125; else &#123; </span> \r\n                    <br/>\r\n                    <span>&ensp;&ensp;&ensp;&ensp;<b>callBack ( 'Like and Subscribe! :)' )</b></span> \r\n                    <br/>\r\n                    <span>&ensp;&ensp;&#125;</span> \r\n                    <br/>\r\n                    <span>&#125;</span> \r\n                    <br/>\r\n                    <br/>\r\n                    <br/>\r\n                    <br/> \r\n                    <span className={stylingClasses.spanColorOrange}><i>// Calling <b>watchInstaReels</b> function ( and passing two callBack functions <b>message</b> and <b>error</b>) </i></span> \r\n                    <br/>\r\n                    <br/>\r\n                    <span><b>watchInstaReels</b>( ( <b>message</b> ) =&#62; &#123; </span> \r\n                    <br/>\r\n                    <span>&ensp;&ensp;console.log( 'Success: ' + <b>message</b> )</span> \r\n                    <br/>\r\n                    <span>&#125;, ( <b>error</b> )  =&#62; &#123;</span> \r\n                    <br/>\r\n                    <span>&ensp;&ensp;console.log( error.name + ' ' + error.message )</span> \r\n                    <br/>\r\n                    <span>&#125; )</span>\r\n                    <br/>\r\n                    <br/>\r\n                    <br/>\r\n                    <br/>\r\n                    <br/>\r\n                    <br/>\r\n                    {/* NOW THIS FUNCTION WILL BE CONVERTED USING THE PROMISE */}\r\n                    <span>========================</span>\r\n                    <br/>\r\n                    <span className={stylingClasses.spanColorOrange}>NOW THIS FUNCTION WILL BE CONVERTED USING THE PROMISE</span>\r\n                    <br/>\r\n                    <span>========================</span>\r\n                    <br/>\r\n                    <br/>\r\n                    <span>function <b>watchInstaReelsPromise</b>( ) &#123; </span> \r\n                    <br/>\r\n                    <span>&ensp;&ensp;<b>return</b> new <b>Promise</b> ( (resolve, reject ) =&#62; &#123; </span> \r\n                    <br/>\r\n                    <span>&ensp;&ensp;&ensp;&ensp;if ( userLeft ) &#123;</span> \r\n                    <br/>\r\n                    <span>&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;<b>reject ( &#123;</b></span> \r\n                    <br/>\r\n                    <span>&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;<b>name</b> : 'User left' ,</span> \r\n                    <br/>\r\n                    <span>&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;<b>message</b> : ':('</span> \r\n                    <br/>\r\n                    <span>&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;<b>&#125; )</b></span> \r\n                    <br/>\r\n                    <span>&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&#125; else if ( userNotLiking ) &#123; </span> \r\n                    <br/>\r\n                    <span>&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;<b>reject ( &#123;</b></span> \r\n                    <br/>\r\n                    <span>&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;<b>name</b> : 'User not commenting and liking' ,</span> \r\n                    <br/>\r\n                    <span>&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;<b>message</b> : 'Very bad :('</span> \r\n                    <br/>\r\n                    <span>&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;<b>&#125; )</b></span> \r\n                    <br/>\r\n                    <span>&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&#125; else &#123; </span> \r\n                    <br/>\r\n                    <span>&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;<b>resolve ( 'Like and Subscribe! :)' )</b></span> \r\n                    <br/>\r\n                    <span>&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&#125;</span> \r\n                    <br/>\r\n                    <span>&ensp;&ensp;&#125; )</span> \r\n                    <br/>\r\n                    <span>&#125;</span> \r\n                    <br/>\r\n                    <br/>\r\n                    <br/>\r\n                    <br/> \r\n                    <span className={stylingClasses.spanColorOrange}><i>// Calling <b>watchInstaReelsPromise</b> function ( and passing two callBack functions <b>message</b> and <b>error</b>) </i></span> \r\n                    <br/>\r\n                    <br/>\r\n                    <span><b>watchInstaReelsPromise( )</b>.then( ( <b>message</b> ) =&#62; &#123; </span> \r\n                    <br/>\r\n                    <span>&ensp;&ensp;console.log( 'Success: ' + <b>message</b> )</span> \r\n                    <br/>\r\n                    <span>&#125; ).catch( ( <b>error</b> )  =&#62; &#123;</span> \r\n                    <br/>\r\n                    <span>&ensp;&ensp;console.log( error.name + ' ' + error.message )</span> \r\n                    <br/>\r\n                    <span>&#125; )</span>\r\n                    <br/>\r\n\r\n                </div>\r\n\r\n            </div>\r\n            \r\n            <p><b>How this code works</b></p>\r\n            \r\n            <div className={stylingClasses.paragraph}>\r\n            \r\n                <span> <button onClick={() => setUserLeft(!userLeft)}>userLeft</button> let<b> userLeft = </b></span> {userLeft ? 'true' : 'false'}\r\n                <br/>\r\n                <br/>\r\n                <span> <button onClick={() => setUserNotLiking(!userNotLiking)}>userNotLiking</button> let<b> userNotLiking = </b></span> {userNotLiking ? 'true' : 'false'}\r\n                <br/>\r\n                <br/>\r\n                <button onClick={() => watchInstaReelsPromise().then( (message) => {\r\n                    setMessage('Success: ' + message)\r\n                }).catch( (error) => {\r\n                    setMessage(error.name + ' ' + error.message)\r\n                })\r\n                \r\n                }>RUN PROMISE FUNCTION</button> <span><b> - {message}</b></span>\r\n\r\n            </div>\r\n\r\n            <br/>\r\n            <br/>\r\n            <p><b>Promise.all ( )</b>  and  <b>Promise.race ( ) </b></p>\r\n            \r\n             {/* CODING */}\r\n             \r\n                \r\n                <div className={stylingClasses.paragraph}>\r\n                    <div className={stylingClasses.codingPart}>\r\n                        <span>const p1 = new <b>Promise</b>( ( <b>resolve, reject</b> ) =&#62; &#123; </span> \r\n                        <br/>\r\n                        <span>&ensp;&ensp;&ensp;&ensp;<b>resolve( \" Promise 1 resolved ! \" )</b></span> \r\n                        <br/>\r\n                        <span>&#125; )</span> \r\n                        <br/>\r\n                        <br/>\r\n                        <span>const p2 = new <b>Promise</b>( ( <b>resolve, reject</b> ) =&#62; &#123; </span> \r\n                        <br/>\r\n                        <span>&ensp;&ensp;&ensp;&ensp;<b>resolve( \" Promise 2 resolved ! \" )</b></span> \r\n                        <br/>\r\n                        <span>&#125; )</span> \r\n                        <br/>\r\n                        <br/>\r\n                        <span>const p3 = new <b>Promise</b>( ( <b>resolve, reject</b> ) =&#62; &#123; </span> \r\n                        <br/>\r\n                        <span>&ensp;&ensp;&ensp;&ensp;<b>resolve( \" Promise 3 resolved ! \" )</b></span> \r\n                        <br/>\r\n                        <span>&#125; )</span> \r\n                        <br/>\r\n                        <br/>\r\n\r\n                        <span>==============================================</span>\r\n                        <br/>\r\n                        <span className={stylingClasses.spanColorOrange}><i>// Now we gonna use Promise.all()</i></span>\r\n                        <br/>\r\n                        <span className={stylingClasses.spanColorOrange}><i>// Waits till all promises are resolved and then <b>return</b></i></span>\r\n                        <br/>\r\n                        <br/>\r\n\r\n                        <span>Promise.<b>all</b> ( [ p1, p2, p3 ] )</span> \r\n                        <br/>\r\n                        <span>.<b>then</b>( ( messages ) =&#62; &#123; </span> \r\n                        <br/>\r\n                        <span>&ensp;&ensp;console.log( messages )</span> \r\n                        <br/>\r\n                        <span>&#125; )</span> \r\n                        <br/>\r\n                        <br/>\r\n                        <span>==============================================</span>\r\n                        <br/>\r\n                        <span className={stylingClasses.spanColorOrange}><i>// Now we gonna use Promise.race()</i></span>\r\n                        <br/>\r\n                        <span className={stylingClasses.spanColorOrange}><i>// Waits till first promise is resolved and then <b>return</b></i></span>\r\n                        <br/>\r\n                        <br/>\r\n                        <span>Promise.<b>race</b> ( [ p1, p2, p3 ] )</span> \r\n                        <br/>\r\n                        <span>.<b>then</b>( ( message ) =&#62; &#123; </span> <span className={stylingClasses.spanColorOrange}><i>  // returns single message</i></span>\r\n                        <br/>\r\n                        <span>&ensp;&ensp;console.log( messages )</span> \r\n                        <br/>\r\n                        <span>&#125; )</span> \r\n                        <br/>\r\n                        <br/>\r\n\r\n                    </div>\r\n                </div>\r\n\r\n\r\n            <p><b>How this code works</b></p>\r\n            \r\n            <div className={stylingClasses.paragraph}>\r\n            \r\n                {/* @ts-ignore */}\r\n                <button onClick={() => promiseAll()}>PROMISE ALL</button> <span><b> - {allPromiseResolved}</b></span>\r\n\r\n                <br/>\r\n                <br/>\r\n\r\n                {/* @ts-ignore */}\r\n                <button onClick={() => promiseRace()}>PROMISE RACE</button> <span><b> - {onePromiseResolved}</b></span>\r\n\r\n            </div>\r\n\r\n\r\n            <br/>\r\n            <br/>\r\n                {/* NOTE */}\r\n                <div className={stylingClasses.note}>\r\n                    <span><b>NOTE</b></span>\r\n                    <br/>\r\n                    <br/>\r\n                    <span>We use <b>setTimeout</b> ( ( ) =&#62; &#123; &#125;, timeout )</span>\r\n                </div>\r\n\r\n            <br/>\r\n            <br/>\r\n            <br/>\r\n            \r\n\r\n\r\n\r\n            <br/>\r\n            <br/>\r\n            <br/>\r\n            \r\n    \r\n    </div>\r\n}","import React from 'react'\r\nimport { Route, Routes } from 'react-router-dom'\r\nimport classes from './../Container.module.css'\r\nimport { JsAbout } from './About/JsAbout'\r\nimport { AsyncAwait } from './AsyncAwait/AsyncAwait'\r\nimport { JsOther } from './Other/JsOther'\r\nimport { JsPromise } from './Promise/JsPromise'\r\n\r\nexport const JsContainer = () => {\r\n\r\n    return <div className={classes.mainContainer}>\r\n\r\n        <h1>\r\n        JavaScript\r\n        </h1>\r\n        \r\n\r\n        <Routes>\r\n                <Route path='/about' element={<JsAbout/>}/>\r\n                <Route path='/other' element={<JsOther/>}/>       \r\n                <Route path='/promise' element={<JsPromise/>}/>\r\n                <Route path='/asyncAwait' element={<AsyncAwait/>}/>     \r\n        </Routes>\r\n\r\n\r\n    </div>\r\n\r\n}","import React from 'react'\r\nimport { Sidebar } from '../Sidebar/Sidebar'\r\nimport classes from './Body.module.css'\r\nimport { Route, Routes } from 'react-router-dom'\r\nimport { ReactContainer } from '../Pages/React/ReactContainer'\r\nimport { GitContainer } from '../Pages/Git/GitContainer'\r\nimport { JsContainer } from '../Pages/JS/JsContainer'\r\n\r\nexport const Body = () => {\r\n\r\n\r\n\r\n    return <div className={classes.mainContainer}>\r\n\r\n        {/* Sidebar */}\r\n        <div className={classes.sidebar}>\r\n            <Sidebar/>\r\n        </div>\r\n\r\n        {/* Content */}\r\n        <div className={classes.body}>\r\n            <Routes>   \r\n                <Route path='/react/*' element={<ReactContainer/>}/>\r\n                <Route path='/git/*' element={<GitContainer/>}/>\r\n                <Route path='/js/*' element={<JsContainer/>}/>\r\n            </Routes>\r\n        </div>\r\n\r\n    </div>\r\n}","import React from 'react'\r\nimport classes from './Footer.module.css'\r\n\r\nexport const Footer = () => {\r\n\r\n\r\n\r\n    return <div className={classes.mainContainer}>\r\n\r\n        Footer\r\n\r\n    </div>\r\n}","import React from 'react';\r\nimport './App.css';\r\nimport {Header} from './Components/Header/Header';\r\nimport { Body } from './Components/Body/Body';\r\nimport { Footer } from './Components/Footer/Footer';\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        \r\n        \r\n        {/* Header component */}\r\n        <Header />\r\n\r\n        {/* Body */}\r\n        <Body />\r\n        \r\n        {/* Footer */}\r\n        <Footer />\r\n\r\n        {/* \r\n        \r\n        \r\n        \r\n        \r\n        Redirect to main page probably\r\n        \r\n        \r\n        \r\n        */}\r\n\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { BrowserRouter, HashRouter } from 'react-router-dom'; \r\n\r\nReactDOM.render(\r\n\r\n  \r\n  // <BrowserRouter>\r\n  <HashRouter>\r\n    <React.StrictMode>\r\n      <App />\r\n    </React.StrictMode>\r\n  {/* </BrowserRouter>, */}\r\n  </HashRouter>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}